const pg = require('pg');
const QueryStream = require('pg-query-stream');

const connectionString = (process.argv[2] === 'local') ? 'postgres://localhost:5432/coleelam' : process.env.DATABASE_URL;


console.log(connectionString);
const pool = new pg.Pool({
  connectionString: connectionString,
  ssl: (process.argv[2] === 'local') ? false : true,
});
pool.query('DROP TABLE IF EXISTS users', function(err) {
  pool.query("CREATE TABLE users (user_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, " +
  "username text NOT NULL CHECK (username <> \'\') CONSTRAINT unique_user UNIQUE, " +
  "email text NOT NULL CHECK (email <> \'\'), pass_hash text NOT NULL, " +
  "CONSTRAINT user_email_unique UNIQUE (username, email))", function(err) {
    if (err) {
      console.log('cannot recreate table users ' + err);
    }
    pool.query('DROP TABLE IF EXISTS groups', function(err) {
      pool.query("CREATE TABLE groups (group_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, " +
      "group_name text NOT NULL CHECK (group_name <> \'\') CONSTRAINT unique_group UNIQUE, " +
      "created_by int NOT NULL, " +
      "group_members int ARRAY, CONSTRAINT group_created_by_user_id_fkey " +
      "FOREIGN KEY (created_by) REFERENCES users (user_id) MATCH SIMPLE ON UPDATE NO ACTION " +
      "ON DELETE NO ACTION)", function(err) {
        if (err) {
          console.log('cannot create table groups ' + err);
        }
        pool.query('DROP TABLE IF EXISTS events', function(err) {
          pool.query("CREATE TABLE events (event_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, " +
          "event_name text NOT NULL CHECK (event_name <> \'\'), " +
          "creator int NOT NULL, group_id int, " +
          "created_at timestamp WITHOUT TIME ZONE NOT NULL DEFAULT NOW(), attendees int ARRAY, " +
          "event_time timestamp WITHOUT TIME ZONE NOT NULL CHECK (event_time > NOW()), " +
          "CONSTRAINT event_created_by_user_id_fkey " +
          "FOREIGN KEY (creator) REFERENCES users (user_id) MATCH SIMPLE ON UPDATE NO ACTION " +
          "ON DELETE NO ACTION, CONSTRAINT user_cannot_make_duplicate_events UNIQUE (creator, event_name)," +
          "CONSTRAINT event_group_id_fkey " +
          "FOREIGN KEY (group_id) REFERENCES groups (group_id) MATCH SIMPLE ON UPDATE NO ACTION " +
          "ON DELETE NO ACTION)", function(err) {
            if (err) {
              console.log('cannot create table events ' + err);
            }
            pool.end();
          });
        });
      });
    });
  });
});

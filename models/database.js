const pg = require('pg');
const QueryStream = require('pg-query-stream');

const connectionString = process.env.DATABASE_URL || 'postgres://localhost:5432/coleelam';

const client = new pg.Client(connectionString);


const pool = new pg.Pool();
pool.query('DROP TABLE IF EXISTS users', function(err) {
  pool.query("CREATE TABLE users (user_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, " +
  "username text NOT NULL CHECK (username <> \'\') CONSTRAINT unique_user UNIQUE, " +
  "email text NOT NULL CHECK (email <> \'\'), pass_hash text NOT NULL, " +
  "CONSTRAINT user_email_unique UNIQUE (username, email))", function(err) {
    if (err) {
      console.log('cannot recreate table ' + err);
    }
    pool.query('DROP TABLE IF EXISTS events', function(err) {
      pool.query("CREATE TABLE events (event_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, " +
      "event_name text NOT NULL CHECK (event_name <> \'\'), creator int NOT NULL, " +
      "created_at timestamp WITH TIME ZONE NOT NULL DEFAULT NOW(), attendees int ARRAY, CONSTRAINT event_created_by_user_id_fkey " +
      "FOREIGN KEY (creator) REFERENCES users (user_id) MATCH SIMPLE ON UPDATE NO ACTION " +
      "ON DELETE NO ACTION)", function(err) {
        if (err) {
          console.log('cannot create table ' + err);
        }
        pool.end();
      });
    });
  });
});
